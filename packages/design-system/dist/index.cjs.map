{"version":3,"sources":["../src/theme/ThemeProvider.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,SAAS,WAAW,gBAA2B;AACtD,SAAS,oBAAoB;AAOtB,IAAM,gBAA8C,CAAC,EAAE,UAAU,SAAS,MAAM;AACrF,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,IAAI;AAE3C,YAAU,MAAM;AACd,mBAAe,cAAc;AAC3B,UAAI;AACF,cAAM,WAAW,MAAM,MAAM,QAAQ;AACrC,YAAI,CAAC,SAAS;AAAI,gBAAM,IAAI,MAAM,wBAAwB;AAC1D,cAAM,SAAS,MAAM,SAAS,KAAK;AACnC,cAAM,aAAa,YAAY,EAAE,cAAc,MAAM;AAAA,MACvD,SAAS,GAAP;AAEA,gBAAQ,KAAK,uCAAuC,CAAC;AAAA,MACvD,UAAE;AACA,mBAAW,KAAK;AAAA,MAClB;AAAA,IACF;AACA,gBAAY;AAAA,EACd,GAAG,CAAC,QAAQ,CAAC;AAEb,MAAI;AAAS,WAAO;AAEpB,SAAO,0DAAG,QAAS;AACrB","sourcesContent":["import React, { useEffect, useState, ReactNode } from 'react';\nimport { TokenManager } from '@paysecure-design/tokens';\n\ninterface ThemeProviderProps {\n  tokenUrl: string;\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ tokenUrl, children }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchTokens() {\n      try {\n        const response = await fetch(tokenUrl);\n        if (!response.ok) throw new Error('Failed to fetch tokens');\n        const tokens = await response.json();\n        await TokenManager.getInstance().processTokens(tokens);\n      } catch (e) {\n        // If fetch fails, do nothing: components will use their default tokens\n        console.warn('Token fetch failed, using defaults.', e);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTokens();\n  }, [tokenUrl]);\n\n  if (loading) return null;\n\n  return <>{children}</>;\n}; "]}